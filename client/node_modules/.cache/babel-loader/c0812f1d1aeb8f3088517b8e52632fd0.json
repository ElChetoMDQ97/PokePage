{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar PropTypes = _interopRequireWildcard(require(\"prop-types\"));\n\nvar _reactMotion = require(\"react-motion\");\n\nvar _immutabilityHelper = _interopRequireDefault(require(\"immutability-helper\"));\n\nvar _reactMultiRef = _interopRequireDefault(require(\"react-multi-ref\"));\n\nvar _OnUpdate = _interopRequireDefault(require(\"./OnUpdate\"));\n\nvar _MoveContainer = _interopRequireDefault(require(\"./MoveContainer\"));\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2[\"default\"])(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar DEFAULT_HEIGHT = {\n  natural: 200,\n  drag: 30\n};\n\nfunction getScrollSpeed(distance, speed, size) {\n  // If distance is zero, then the result is the max speed. Otherwise,\n  // the result tapers toward zero as it gets closer to the opposite\n  // edge of the region.\n  return Math.round(speed - speed / size * distance);\n}\n\nvar DraggableList = /*#__PURE__*/function (_React$Component) {\n  (0, _inherits2[\"default\"])(DraggableList, _React$Component);\n\n  var _super = _createSuper(DraggableList);\n\n  function DraggableList() {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, DraggableList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_itemRefs\", new _reactMultiRef[\"default\"]());\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_listRef\", /*#__PURE__*/React.createRef());\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"state\", {\n      useAbsolutePositioning: false,\n      dragging: false,\n      lastDrag: null,\n      heights: null\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_handleTouchMove\", function (e) {\n      e.preventDefault();\n\n      _this._handleMouseMove(e.touches[0]);\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_handleMouseMove\", function (_ref) {\n      var pageY = _ref.pageY,\n          clientY = _ref.clientY;\n      var list = _this.props.list;\n      var autoScrollMaxSpeed = _this.props.autoScrollMaxSpeed;\n      var autoScrollRegionSize = _this.props.autoScrollRegionSize;\n      var _this$state = _this.state,\n          dragging = _this$state.dragging,\n          lastDrag = _this$state.lastDrag;\n      if (!dragging || !lastDrag) return;\n\n      var containerEl = _this._getContainer();\n\n      var dragVisualIndex = _this._getDragVisualIndex();\n\n      var keyFn = _this._getKeyFn();\n\n      clearInterval(_this._autoScrollerTimer); // If the user has the mouse near the top or bottom of the container and\n      // not at the end of the list, then autoscroll.\n\n      if (dragVisualIndex !== 0 && dragVisualIndex !== list.length - 1) {\n        var scrollSpeed = 0;\n        var containerRect = containerEl && containerEl !== document.body && containerEl.getBoundingClientRect ? containerEl.getBoundingClientRect() : {\n          top: 0,\n          bottom: Infinity\n        }; // Get the lowest of the screen top and the container top.\n\n        var top = Math.max(0, containerRect.top);\n        var distanceFromTop = clientY - top;\n\n        if (distanceFromTop > 0 && distanceFromTop < autoScrollRegionSize) {\n          scrollSpeed = -1 * getScrollSpeed(distanceFromTop, autoScrollMaxSpeed, autoScrollRegionSize);\n        } else {\n          // Get the lowest of the screen bottom and the container bottom.\n          var bottom = Math.min(window.innerHeight, containerRect.bottom);\n          var distanceFromBottom = bottom - clientY;\n\n          if (distanceFromBottom > 0 && distanceFromBottom < autoScrollRegionSize) {\n            scrollSpeed = getScrollSpeed(distanceFromBottom, autoScrollMaxSpeed, autoScrollRegionSize);\n          }\n        }\n\n        if (scrollSpeed !== 0) {\n          _this._scrollContainer(scrollSpeed);\n\n          _this._autoScrollerTimer = setTimeout(function () {\n            _this._handleMouseMove({\n              pageY: pageY + (containerEl === document.body ? scrollSpeed : 0),\n              clientY: clientY\n            });\n          }, 16);\n        }\n      }\n\n      var containerScroll = !containerEl || containerEl === document.body ? 0 : containerEl.scrollTop;\n      var mouseY = pageY - lastDrag.mouseOffset + containerScroll;\n\n      if (_this.props.constrainDrag) {\n        var visualList = _this._getVisualListDuringDrag();\n\n        mouseY = Math.max(mouseY, _this._getDistanceFromTopDuringDrag(lastDrag, keyFn(visualList[0]), visualList));\n        mouseY = Math.min(mouseY, _this._getDistanceFromTopDuringDrag(lastDrag, keyFn(visualList[visualList.length - 1]), visualList));\n      }\n\n      _this.setState({\n        lastDrag: _objectSpread(_objectSpread({}, lastDrag), {}, {\n          mouseY: mouseY\n        })\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_handleMouseUp\", function () {\n      clearInterval(_this._autoScrollerTimer);\n      window.removeEventListener('mouseup', _this._handleMouseUp);\n      window.removeEventListener('touchend', _this._handleMouseUp);\n      window.removeEventListener('touchmove', _this._handleTouchMove);\n      window.removeEventListener('mousemove', _this._handleMouseMove);\n      if (document.documentElement) document.documentElement.style.cursor = '';\n      _this._lastScrollDelta = 0;\n      var _this$props = _this.props,\n          list = _this$props.list,\n          onMoveEnd = _this$props.onMoveEnd,\n          onDragEnd = _this$props.onDragEnd;\n      var _this$state2 = _this.state,\n          dragging = _this$state2.dragging,\n          lastDrag = _this$state2.lastDrag;\n\n      if (dragging && lastDrag && onMoveEnd) {\n        var dragIndex = _this._getDragListIndex();\n\n        var _newIndex = _this._getDragVisualIndex();\n\n        if (dragIndex !== _newIndex) {\n          var _newList = _this._getVisualListDuringDrag();\n\n          onMoveEnd(_newList, list[dragIndex], dragIndex, _newIndex);\n        }\n\n        if (onDragEnd) {\n          onDragEnd();\n        }\n\n        _this.setState({\n          dragging: false\n        });\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_lastScrollDelta\", 0);\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(DraggableList, [{\n    key: \"getItemInstance\",\n    value: function getItemInstance(key) {\n      var ref = this._itemRefs.map.get(key);\n\n      if (!ref) throw new Error('key not found');\n      return ref.getTemplate();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._handleMouseUp();\n    }\n  }, {\n    key: \"_handleTouchStart\",\n    value: function _handleTouchStart(itemKey, pressY, event) {\n      event.stopPropagation();\n\n      this._handleStartDrag(itemKey, pressY, event.touches[0].pageY);\n    }\n  }, {\n    key: \"_handleMouseDown\",\n    value: function _handleMouseDown(itemKey, pressY, event) {\n      event.preventDefault();\n\n      this._handleStartDrag(itemKey, pressY, event.pageY);\n    }\n  }, {\n    key: \"_handleStartDrag\",\n    value: function _handleStartDrag(itemKey, pressY, pageY) {\n      var _this2 = this;\n\n      if (document.documentElement) document.documentElement.style.cursor = 'move';\n      window.addEventListener('mouseup', this._handleMouseUp);\n      window.addEventListener('touchend', this._handleMouseUp);\n      window.addEventListener('touchmove', this._handleTouchMove);\n      window.addEventListener('mousemove', this._handleMouseMove);\n\n      if (this.props.onDragStart) {\n        this.props.onDragStart();\n      } // If an element has focus while we drag around the parent, some browsers\n      // try to scroll the parent element to keep the focused element in view.\n      // Stop that.\n\n\n      {\n        var listEl = this._listRef.current;\n        if (!listEl) throw new Error('Should not happen');\n\n        if (listEl.contains && document.activeElement && listEl.contains(document.activeElement) && document.activeElement instanceof HTMLElement) {\n          document.activeElement.blur();\n        }\n      }\n\n      var keyFn = this._getKeyFn();\n\n      var newHeights = null;\n\n      if (this.state.heights == null) {\n        var _newHeights = Object.create(null);\n\n        this.props.list.forEach(function (item) {\n          var key = keyFn(item);\n\n          var containerRef = _this2._itemRefs.map.get(key);\n\n          var refEl = containerRef ? containerRef.getDOMNode().firstElementChild : null;\n          var ref = containerRef ? containerRef.getTemplate() : null;\n          var natural = refEl instanceof HTMLElement ? refEl.offsetHeight : DEFAULT_HEIGHT.natural;\n          var drag = ref && typeof ref.getDragHeight === 'function' && ref.getDragHeight() || natural;\n          _newHeights[key] = {\n            natural: natural,\n            drag: drag\n          };\n        });\n        newHeights = _newHeights;\n      } // Need to re-render once before we start dragging so that the `y` values\n      // are set using the correct state.heights and then can animate from there.\n\n\n      var afterHeights = function afterHeights() {\n        var itemIndex = _this2.props.list.map(keyFn).indexOf(itemKey); // pressY will be non-null if the list is currently animating (because the\n        // clicked item has its `y` prop set). pressY will be null if the list is\n        // not currently animating (because the clicked item will be at its\n        // natural position, which is calculatable using _getDistance).\n\n\n        var startY = pressY == null ? _this2._getDistance(0, itemIndex, false) : pressY;\n\n        var containerEl = _this2._getContainer();\n\n        var containerScroll = !containerEl || containerEl === document.body ? 0 : containerEl.scrollTop;\n\n        _this2.setState({\n          useAbsolutePositioning: true,\n          dragging: true,\n          lastDrag: {\n            itemKey: itemKey,\n            startY: startY,\n            mouseY: startY,\n            mouseOffset: pageY - startY + containerScroll\n          }\n        });\n      };\n\n      if (newHeights) {\n        this.setState({\n          heights: newHeights\n        }, afterHeights);\n      } else {\n        afterHeights();\n      }\n    }\n  }, {\n    key: \"_scrollContainer\",\n    value: function _scrollContainer(delta) {\n      var containerEl = this._getContainer();\n\n      if (!containerEl) return;\n\n      if (window.scrollBy && containerEl === document.body) {\n        window.scrollBy(0, delta);\n      } else {\n        containerEl.scrollTop += delta;\n      }\n    }\n  }, {\n    key: \"_adjustScrollAtEnd\",\n    value: function _adjustScrollAtEnd(delta) {\n      var frameDelta = Math.round(delta - this._lastScrollDelta);\n\n      this._scrollContainer(frameDelta);\n\n      this._lastScrollDelta += frameDelta;\n    }\n  }, {\n    key: \"_getDragListIndex\",\n    value: function _getDragListIndex() {\n      var list = this.props.list;\n      var lastDrag = this.state.lastDrag;\n\n      if (!lastDrag) {\n        throw new Error('No drag happened');\n      }\n\n      var keyFn = this._getKeyFn();\n\n      return DraggableList._getIndexOfItemWithKey(keyFn, list, lastDrag.itemKey);\n    }\n  }, {\n    key: \"_getDragVisualIndex\",\n    value: function _getDragVisualIndex() {\n      var list = this.props.list;\n      var padding = this.props.padding;\n      var _this$state3 = this.state,\n          dragging = _this$state3.dragging,\n          lastDrag = _this$state3.lastDrag;\n      if (!dragging || !lastDrag) throw new Error('Should not happen');\n\n      var dragListIndex = this._getDragListIndex();\n\n      var mouseY = lastDrag.mouseY,\n          startY = lastDrag.startY;\n      var movementFromNatural = mouseY - startY; // 1 down, -1 up, 0 neither\n\n      var direction = movementFromNatural > 0 ? 1 : movementFromNatural < 0 ? -1 : 0;\n      var newIndex = dragListIndex;\n\n      if (direction !== 0) {\n        var keyFn = this._getKeyFn();\n\n        var reach = Math.abs(movementFromNatural);\n\n        for (var i = dragListIndex + direction; i < list.length && i >= 0; i += direction) {\n          var iDragHeight = this._getItemHeight(keyFn(list[i])).drag;\n\n          if (reach < iDragHeight / 2 + padding) break;\n          reach -= iDragHeight + padding;\n          newIndex = i;\n        }\n      }\n\n      return newIndex;\n    }\n  }, {\n    key: \"_getVisualListDuringDrag\",\n    value: function _getVisualListDuringDrag() {\n      var list = this.props.list;\n      var _this$state4 = this.state,\n          dragging = _this$state4.dragging,\n          lastDrag = _this$state4.lastDrag;\n      if (!dragging || !lastDrag) throw new Error('Should not happen: _getVisualListDuringDrag called outside of drag');\n\n      var dragListIndex = this._getDragListIndex();\n\n      var dragVisualIndex = this._getDragVisualIndex();\n\n      return (0, _immutabilityHelper[\"default\"])(list, {\n        $splice: [[dragListIndex, 1], [dragVisualIndex, 0, list[dragListIndex]]]\n      });\n    }\n  }, {\n    key: \"_getItemHeight\",\n    value: function _getItemHeight(key) {\n      return this.state.heights != null && key in this.state.heights ? this.state.heights[key] : DEFAULT_HEIGHT;\n    } // Get the distance between the tops of two items in the list.\n    // Does not consider how the dragged item may be rendered in a different position\n    // unless you pass in the re-ordered list as a parameter.\n\n  }, {\n    key: \"_getDistance\",\n    value: function _getDistance(start, end, dragging) {\n      var list = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : this.props.list;\n\n      if (end < start) {\n        return -this._getDistance(end, start, dragging, list);\n      }\n\n      var padding = this.props.padding;\n\n      var keyFn = this._getKeyFn();\n\n      var distance = 0;\n\n      for (var i = start; i < end; i++) {\n        var height = this._getItemHeight(keyFn(list[i]));\n\n        distance += (dragging ? height.drag : height.natural) + padding;\n      }\n\n      return distance;\n    }\n  }, {\n    key: \"_getDistanceFromTopDuringDrag\",\n    value: function _getDistanceFromTopDuringDrag(lastDrag, itemKey, visualList) {\n      var keyFn = this._getKeyFn();\n\n      var index = DraggableList._getIndexOfItemWithKey(keyFn, visualList, itemKey);\n\n      var dragListIndex = this._getDragListIndex();\n\n      var dragVisualIndex = DraggableList._getIndexOfItemWithKey(keyFn, visualList, lastDrag.itemKey);\n\n      var offset = 0;\n\n      if (dragVisualIndex < dragListIndex) {\n        var dragItemHeight = this._getItemHeight(lastDrag.itemKey);\n\n        var newCenterHeight = this._getItemHeight(keyFn(visualList[dragListIndex]));\n\n        offset = dragItemHeight.drag - newCenterHeight.drag;\n      }\n\n      return lastDrag.startY + offset + this._getDistance(dragListIndex, index, true, visualList);\n    }\n  }, {\n    key: \"_getContainer\",\n    value: function _getContainer() {\n      var container = this.props.container;\n      return container ? container() : null;\n    }\n  }, {\n    key: \"_getKeyFn\",\n    value: function _getKeyFn() {\n      return DraggableList._getKeyFn(this.props.itemKey);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var padding = this.props.padding;\n      var _this$props2 = this.props,\n          list = _this$props2.list,\n          springConfig = _this$props2.springConfig,\n          container = _this$props2.container,\n          template = _this$props2.template,\n          unsetZIndex = _this$props2.unsetZIndex,\n          commonProps = _this$props2.commonProps;\n      var _this$state5 = this.state,\n          dragging = _this$state5.dragging,\n          lastDrag = _this$state5.lastDrag,\n          useAbsolutePositioning = _this$state5.useAbsolutePositioning;\n\n      var keyFn = this._getKeyFn();\n\n      var anySelected = (0, _reactMotion.spring)(dragging ? 1 : 0, springConfig);\n      var visualList = dragging ? this._getVisualListDuringDrag() : list;\n      var children = list.map(function (item, i) {\n        var key = keyFn(item);\n        var selectedStyle = dragging && lastDrag && lastDrag.itemKey === key ? {\n          itemSelected: (0, _reactMotion.spring)(1, springConfig),\n          y: lastDrag.mouseY\n        } : {\n          itemSelected: (0, _reactMotion.spring)(0, springConfig),\n          y: (useAbsolutePositioning ? _reactMotion.spring : function (x) {\n            return x;\n          })(dragging && lastDrag ? _this3._getDistanceFromTopDuringDrag(lastDrag, key, visualList) : _this3._getDistance(0, i, false), springConfig)\n        };\n\n        var style = _objectSpread({\n          anySelected: anySelected\n        }, selectedStyle);\n\n        var makeDragHandleProps = function makeDragHandleProps(getY) {\n          return {\n            onMouseDown: function onMouseDown(e) {\n              return _this3._handleMouseDown(key, getY(), e);\n            },\n            onTouchStart: function onTouchStart(e) {\n              return _this3._handleTouchStart(key, getY(), e);\n            }\n          };\n        };\n\n        var height = _this3._getItemHeight(key);\n\n        return /*#__PURE__*/React.createElement(_reactMotion.Motion, {\n          style: style,\n          key: key,\n          children: function children(_ref2) {\n            var itemSelected = _ref2.itemSelected,\n                anySelected = _ref2.anySelected,\n                y = _ref2.y;\n            return /*#__PURE__*/React.createElement(_MoveContainer[\"default\"], {\n              ref: _this3._itemRefs.ref(key),\n              y: useAbsolutePositioning ? y : undefined,\n              template: template,\n              padding: padding,\n              item: item,\n              itemSelected: itemSelected,\n              anySelected: anySelected,\n              height: height,\n              zIndex: unsetZIndex && !useAbsolutePositioning ? 'auto' : lastDrag && lastDrag.itemKey === key ? list.length : i,\n              makeDragHandleProps: makeDragHandleProps,\n              commonProps: commonProps\n            });\n          }\n        });\n      });\n      var adjustScroll = 0;\n\n      if (!dragging && lastDrag && useAbsolutePositioning) {\n        var dragListIndex = this._getDragListIndex();\n\n        adjustScroll = (0, _reactMotion.spring)(this._getDistance(0, dragListIndex, false) - lastDrag.mouseY, springConfig);\n      }\n\n      var heightReserverHeight = 0;\n      var heightReserverMarginBottom = 0;\n\n      if (list.length) {\n        heightReserverMarginBottom = padding;\n\n        if (useAbsolutePositioning) {\n          heightReserverHeight = this._getDistance(0, list.length, false) - padding;\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        ref: this._listRef\n      }, /*#__PURE__*/React.createElement(_reactMotion.Motion, {\n        style: {\n          adjustScroll: adjustScroll,\n          anySelected: anySelected\n        },\n        onRest: function onRest() {\n          if (!dragging) {\n            _this3.setState({\n              heights: null,\n              useAbsolutePositioning: false\n            });\n          }\n        },\n        children: function children(_ref3) {\n          var adjustScroll = _ref3.adjustScroll;\n          return /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              display: useAbsolutePositioning ? 'block' : 'none',\n              height: \"\".concat(heightReserverHeight, \"px\"),\n              marginBottom: \"\".concat(heightReserverMarginBottom, \"px\")\n            }\n          }, container && /*#__PURE__*/React.createElement(_OnUpdate[\"default\"], {\n            cb: function cb() {\n              if (!dragging && lastDrag && useAbsolutePositioning) {\n                _this3._adjustScrollAtEnd(adjustScroll);\n              }\n            }\n          }));\n        }\n      }), children);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(newProps, state) {\n      var list = newProps.list;\n      var lastDrag = state.lastDrag;\n\n      if (lastDrag) {\n        var keyFn = DraggableList._getKeyFn(newProps.itemKey);\n\n        try {\n          DraggableList._getIndexOfItemWithKey(keyFn, list, lastDrag.itemKey);\n        } catch (err) {\n          // If the dragged item was removed from the list, this block will get hit.\n          // Cancel the drag.\n          return {\n            dragging: false,\n            lastDrag: null\n          };\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"_getIndexOfItemWithKey\",\n    value: function _getIndexOfItemWithKey(keyFn, list, itemKey) {\n      for (var i = 0, len = list.length; i < len; i++) {\n        if (keyFn(list[i]) === itemKey) {\n          return i;\n        }\n      }\n\n      throw new Error('Failed to find drag index');\n    }\n  }, {\n    key: \"_getKeyFn\",\n    value: function _getKeyFn(itemKey) {\n      return typeof itemKey === 'function' ? itemKey : function (x) {\n        return x[itemKey];\n      };\n    }\n  }]);\n  return DraggableList;\n}(React.Component);\n\nexports[\"default\"] = DraggableList;\n(0, _defineProperty2[\"default\"])(DraggableList, \"propTypes\", {\n  itemKey: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n  template: PropTypes.func,\n  list: PropTypes.array.isRequired,\n  onMoveEnd: PropTypes.func,\n  container: PropTypes.func,\n  springConfig: PropTypes.object,\n  constrainDrag: PropTypes.bool,\n  padding: PropTypes.number,\n  unsetZIndex: PropTypes.bool,\n  autoScrollMaxSpeed: PropTypes.number.isRequired,\n  autoScrollRegionSize: PropTypes.number.isRequired,\n  commonProps: PropTypes.object\n});\n(0, _defineProperty2[\"default\"])(DraggableList, \"defaultProps\", {\n  springConfig: {\n    stiffness: 300,\n    damping: 50\n  },\n  padding: 10,\n  unsetZIndex: false,\n  constrainDrag: false,\n  autoScrollMaxSpeed: 15,\n  autoScrollRegionSize: 30\n});\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":{"version":3,"mappings":"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","names":["DEFAULT_HEIGHT","natural","drag","getScrollSpeed","distance","speed","size","Math","round","DraggableList","MultiRef","React","createRef","useAbsolutePositioning","dragging","lastDrag","heights","e","preventDefault","_this","_handleMouseMove","touches","pageY","clientY","list","props","autoScrollMaxSpeed","autoScrollRegionSize","state","containerEl","_getContainer","dragVisualIndex","_getDragVisualIndex","keyFn","_getKeyFn","clearInterval","_autoScrollerTimer","length","scrollSpeed","containerRect","document","body","getBoundingClientRect","top","bottom","Infinity","max","distanceFromTop","min","window","innerHeight","distanceFromBottom","_scrollContainer","setTimeout","containerScroll","scrollTop","mouseY","mouseOffset","constrainDrag","visualList","_getVisualListDuringDrag","_getDistanceFromTopDuringDrag","setState","removeEventListener","_handleMouseUp","_handleTouchMove","documentElement","style","cursor","_lastScrollDelta","onMoveEnd","onDragEnd","dragIndex","_getDragListIndex","newIndex","newList","key","ref","_itemRefs","map","get","Error","getTemplate","itemKey","pressY","event","stopPropagation","_handleStartDrag","addEventListener","onDragStart","listEl","_listRef","current","contains","activeElement","HTMLElement","blur","newHeights","_newHeights","Object","create","forEach","item","containerRef","_this2","refEl","getDOMNode","firstElementChild","offsetHeight","getDragHeight","afterHeights","itemIndex","indexOf","startY","_getDistance","delta","scrollBy","frameDelta","_getIndexOfItemWithKey","padding","dragListIndex","movementFromNatural","direction","reach","abs","i","iDragHeight","_getItemHeight","$splice","start","end","height","index","offset","dragItemHeight","newCenterHeight","container","springConfig","template","unsetZIndex","commonProps","anySelected","children","selectedStyle","itemSelected","y","spring","x","_this3","makeDragHandleProps","getY","onMouseDown","_handleMouseDown","onTouchStart","_handleTouchStart","_reactMotion","_MoveContainer","undefined","zIndex","adjustScroll","heightReserverHeight","heightReserverMarginBottom","position","onRest","display","marginBottom","_OnUpdate","cb","_adjustScrollAtEnd","newProps","err","len","Component","PropTypes","oneOfType","string","func","isRequired","array","object","bool","number","stiffness","damping"],"sources":["../../src/index.tsx"],"sourcesContent":["/* eslint react/prop-types: \"error\" */\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Motion, spring, OpaqueConfig } from 'react-motion';\nimport update from 'immutability-helper';\nimport MultiRef from 'react-multi-ref';\nimport OnUpdate from './OnUpdate';\nimport MoveContainer, { HeightData } from './MoveContainer';\n\nconst DEFAULT_HEIGHT: HeightData = { natural: 200, drag: 30 };\n\nfunction getScrollSpeed(distance: number, speed: number, size: number): number {\n  // If distance is zero, then the result is the max speed. Otherwise,\n  // the result tapers toward zero as it gets closer to the opposite\n  // edge of the region.\n  return Math.round(speed - (speed / size) * distance);\n}\n\ninterface Drag {\n  itemKey: string;\n\n  // The y position of the dragged item when the drag started. This will be\n  // equal to the initial mouseY value. The items not being dragged will be\n  // positioned so that the dragged item's original position lines up with\n  // startY.\n  startY: number;\n\n  // The y-position that corresponds to the mouse's current location. The\n  // dragged item will be rendered with this as its y-position.\n  mouseY: number;\n\n  // This is the difference between the raw mouse y value and startY. For\n  // example, if a user clicks the drag handle at a point 5 px below the item's\n  // top, then mouseOffset will be set to 5. As the user moves their mouse, we\n  // update mouseY to be the raw mouse y value minus mouseOffset.\n  mouseOffset: number;\n}\n\nexport interface TemplateProps<I, C> {\n  item: I;\n  itemSelected: number;\n  anySelected: number;\n  dragHandleProps: object;\n  commonProps: C;\n}\n\nexport interface Props<I, C, T> {\n  itemKey: string | ((item: I) => string);\n  template: new (props: any, context?: any) => T;\n  list: ReadonlyArray<I>;\n  onMoveEnd?: (\n    newList: ReadonlyArray<I>,\n    movedItem: I,\n    oldIndex: number,\n    newIndex: number\n  ) => void;\n  container?: () => HTMLElement | null | undefined;\n  constrainDrag?: boolean;\n  springConfig?: object;\n  padding?: number;\n  unsetZIndex?: boolean;\n  autoScrollMaxSpeed?: number;\n  autoScrollRegionSize?: number;\n  commonProps?: C;\n  onDragStart?: () => void;\n  onDragEnd?: () => void;\n}\ninterface State {\n  useAbsolutePositioning: boolean;\n  dragging: boolean;\n  lastDrag: Drag | null;\n  heights: { [key: string]: HeightData } | null;\n}\nexport default class DraggableList<\n  I,\n  C,\n  T extends React.Component<Partial<TemplateProps<I, C>>>\n> extends React.Component<Props<I, C, T>, State> {\n  public static propTypes = {\n    itemKey: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    template: PropTypes.func,\n    list: PropTypes.array.isRequired,\n    onMoveEnd: PropTypes.func,\n    container: PropTypes.func,\n    springConfig: PropTypes.object,\n    constrainDrag: PropTypes.bool,\n    padding: PropTypes.number,\n    unsetZIndex: PropTypes.bool,\n    autoScrollMaxSpeed: PropTypes.number.isRequired,\n    autoScrollRegionSize: PropTypes.number.isRequired,\n    commonProps: PropTypes.object,\n  };\n  public static defaultProps: Partial<Props<any, any, any>> = {\n    springConfig: { stiffness: 300, damping: 50 },\n    padding: 10,\n    unsetZIndex: false,\n    constrainDrag: false,\n    autoScrollMaxSpeed: 15,\n    autoScrollRegionSize: 30,\n  };\n  private readonly _itemRefs: MultiRef<string, MoveContainer<I, any, T>> =\n    new MultiRef();\n  private _autoScrollerTimer: any;\n\n  private _listRef = React.createRef<HTMLDivElement>();\n\n  public state: State = {\n    useAbsolutePositioning: false,\n    dragging: false,\n    lastDrag: null,\n    heights: null,\n  };\n\n  public getItemInstance(key: string): T {\n    const ref = this._itemRefs.map.get(key);\n    if (!ref) throw new Error('key not found');\n    return ref.getTemplate();\n  }\n\n  public static getDerivedStateFromProps<I, C, T>(\n    newProps: Props<I, C, T>,\n    state: State\n  ): Partial<State> | null {\n    const { list } = newProps;\n    const { lastDrag } = state;\n\n    if (lastDrag) {\n      const keyFn = DraggableList._getKeyFn<I>(newProps.itemKey);\n\n      try {\n        DraggableList._getIndexOfItemWithKey<I>(keyFn, list, lastDrag.itemKey);\n      } catch (err) {\n        // If the dragged item was removed from the list, this block will get hit.\n        // Cancel the drag.\n        return { dragging: false, lastDrag: null };\n      }\n    }\n\n    return null;\n  }\n\n  public componentWillUnmount() {\n    this._handleMouseUp();\n  }\n\n  private _handleTouchStart(\n    itemKey: string,\n    pressY: number | undefined,\n    event: TouchEvent | React.TouchEvent\n  ) {\n    event.stopPropagation();\n    this._handleStartDrag(itemKey, pressY, event.touches[0].pageY);\n  }\n\n  private _handleMouseDown(\n    itemKey: string,\n    pressY: number | undefined,\n    event: MouseEvent | React.MouseEvent\n  ) {\n    event.preventDefault();\n    this._handleStartDrag(itemKey, pressY, event.pageY);\n  }\n\n  private _handleStartDrag(\n    itemKey: string,\n    pressY: number | undefined,\n    pageY: number\n  ) {\n    if (document.documentElement)\n      document.documentElement.style.cursor = 'move';\n    window.addEventListener('mouseup', this._handleMouseUp);\n    window.addEventListener('touchend', this._handleMouseUp);\n    window.addEventListener('touchmove', this._handleTouchMove);\n    window.addEventListener('mousemove', this._handleMouseMove);\n\n    if (this.props.onDragStart) {\n      this.props.onDragStart();\n    }\n\n    // If an element has focus while we drag around the parent, some browsers\n    // try to scroll the parent element to keep the focused element in view.\n    // Stop that.\n    {\n      const listEl = this._listRef.current;\n      if (!listEl) throw new Error('Should not happen');\n      if (\n        listEl.contains &&\n        document.activeElement &&\n        listEl.contains(document.activeElement) &&\n        document.activeElement instanceof HTMLElement\n      ) {\n        document.activeElement.blur();\n      }\n    }\n\n    const keyFn = this._getKeyFn();\n\n    let newHeights = null;\n    if (this.state.heights == null) {\n      const _newHeights: { [key: string]: HeightData } = Object.create(null);\n\n      this.props.list.forEach((item) => {\n        const key = keyFn(item);\n        const containerRef = this._itemRefs.map.get(key);\n        const refEl = containerRef\n          ? containerRef.getDOMNode().firstElementChild\n          : null;\n        const ref = containerRef ? containerRef.getTemplate() : null;\n        const natural =\n          refEl instanceof HTMLElement\n            ? refEl.offsetHeight\n            : DEFAULT_HEIGHT.natural;\n        const drag =\n          (ref &&\n            typeof (ref as any).getDragHeight === 'function' &&\n            (ref as any).getDragHeight()) ||\n          natural;\n\n        _newHeights[key] = { natural, drag };\n      });\n\n      newHeights = _newHeights;\n    }\n\n    // Need to re-render once before we start dragging so that the `y` values\n    // are set using the correct state.heights and then can animate from there.\n\n    const afterHeights = () => {\n      const itemIndex = this.props.list.map(keyFn).indexOf(itemKey);\n\n      // pressY will be non-null if the list is currently animating (because the\n      // clicked item has its `y` prop set). pressY will be null if the list is\n      // not currently animating (because the clicked item will be at its\n      // natural position, which is calculatable using _getDistance).\n      const startY =\n        pressY == null ? this._getDistance(0, itemIndex, false) : pressY;\n\n      const containerEl = this._getContainer();\n      const containerScroll =\n        !containerEl || containerEl === document.body\n          ? 0\n          : containerEl.scrollTop;\n\n      this.setState({\n        useAbsolutePositioning: true,\n        dragging: true,\n        lastDrag: {\n          itemKey: itemKey,\n          startY,\n          mouseY: startY,\n          mouseOffset: pageY - startY + containerScroll,\n        },\n      });\n    };\n\n    if (newHeights) {\n      this.setState({ heights: newHeights }, afterHeights);\n    } else {\n      afterHeights();\n    }\n  }\n\n  private _handleTouchMove = (e: TouchEvent) => {\n    e.preventDefault();\n    this._handleMouseMove(e.touches[0]);\n  };\n\n  private _handleMouseMove = ({\n    pageY,\n    clientY,\n  }: MouseEvent | Touch | { pageY: number; clientY: number }) => {\n    const { list } = this.props;\n    const autoScrollMaxSpeed = this.props.autoScrollMaxSpeed!;\n    const autoScrollRegionSize = this.props.autoScrollRegionSize!;\n    const { dragging, lastDrag } = this.state;\n    if (!dragging || !lastDrag) return;\n\n    const containerEl = this._getContainer();\n    const dragVisualIndex = this._getDragVisualIndex();\n    const keyFn = this._getKeyFn();\n\n    clearInterval(this._autoScrollerTimer);\n\n    // If the user has the mouse near the top or bottom of the container and\n    // not at the end of the list, then autoscroll.\n    if (dragVisualIndex !== 0 && dragVisualIndex !== list.length - 1) {\n      let scrollSpeed = 0;\n\n      const containerRect =\n        containerEl &&\n        containerEl !== document.body &&\n        containerEl.getBoundingClientRect\n          ? containerEl.getBoundingClientRect()\n          : { top: 0, bottom: Infinity };\n\n      // Get the lowest of the screen top and the container top.\n      const top = Math.max(0, containerRect.top);\n\n      const distanceFromTop = clientY - top;\n      if (distanceFromTop > 0 && distanceFromTop < autoScrollRegionSize) {\n        scrollSpeed =\n          -1 *\n          getScrollSpeed(\n            distanceFromTop,\n            autoScrollMaxSpeed,\n            autoScrollRegionSize\n          );\n      } else {\n        // Get the lowest of the screen bottom and the container bottom.\n        const bottom = Math.min(window.innerHeight, containerRect.bottom);\n        const distanceFromBottom = bottom - clientY;\n        if (\n          distanceFromBottom > 0 &&\n          distanceFromBottom < autoScrollRegionSize\n        ) {\n          scrollSpeed = getScrollSpeed(\n            distanceFromBottom,\n            autoScrollMaxSpeed,\n            autoScrollRegionSize\n          );\n        }\n      }\n\n      if (scrollSpeed !== 0) {\n        this._scrollContainer(scrollSpeed);\n        this._autoScrollerTimer = setTimeout(() => {\n          this._handleMouseMove({\n            pageY: pageY + (containerEl === document.body ? scrollSpeed : 0),\n            clientY,\n          });\n        }, 16);\n      }\n    }\n\n    const containerScroll =\n      !containerEl || containerEl === document.body ? 0 : containerEl.scrollTop;\n    let mouseY = pageY - lastDrag.mouseOffset + containerScroll;\n    if (this.props.constrainDrag) {\n      const visualList = this._getVisualListDuringDrag();\n\n      mouseY = Math.max(\n        mouseY,\n        this._getDistanceFromTopDuringDrag(\n          lastDrag,\n          keyFn(visualList[0]),\n          visualList\n        )\n      );\n      mouseY = Math.min(\n        mouseY,\n        this._getDistanceFromTopDuringDrag(\n          lastDrag,\n          keyFn(visualList[visualList.length - 1]),\n          visualList\n        )\n      );\n    }\n\n    this.setState({ lastDrag: { ...lastDrag, mouseY } });\n  };\n\n  _handleMouseUp = () => {\n    clearInterval(this._autoScrollerTimer);\n    window.removeEventListener('mouseup', this._handleMouseUp);\n    window.removeEventListener('touchend', this._handleMouseUp);\n    window.removeEventListener('touchmove', this._handleTouchMove);\n    window.removeEventListener('mousemove', this._handleMouseMove);\n\n    if (document.documentElement) document.documentElement.style.cursor = '';\n    this._lastScrollDelta = 0;\n\n    const { list, onMoveEnd, onDragEnd } = this.props;\n    const { dragging, lastDrag } = this.state;\n\n    if (dragging && lastDrag && onMoveEnd) {\n      const dragIndex = this._getDragListIndex();\n      const newIndex = this._getDragVisualIndex();\n\n      if (dragIndex !== newIndex) {\n        const newList = this._getVisualListDuringDrag();\n\n        onMoveEnd(newList, list[dragIndex], dragIndex, newIndex);\n      }\n\n      if (onDragEnd) {\n        onDragEnd();\n      }\n      \n\n      this.setState({ dragging: false });\n    }\n  };\n\n  _scrollContainer(delta: number) {\n    const containerEl = this._getContainer();\n    if (!containerEl) return;\n    if (window.scrollBy && containerEl === document.body) {\n      window.scrollBy(0, delta);\n    } else {\n      containerEl.scrollTop += delta;\n    }\n  }\n\n  private _lastScrollDelta = 0;\n  _adjustScrollAtEnd(delta: number) {\n    const frameDelta = Math.round(delta - this._lastScrollDelta);\n    this._scrollContainer(frameDelta);\n    this._lastScrollDelta += frameDelta;\n  }\n\n  static _getIndexOfItemWithKey<I>(\n    keyFn: (item: I) => string,\n    list: ReadonlyArray<I>,\n    itemKey: string\n  ): number {\n    for (let i = 0, len = list.length; i < len; i++) {\n      if (keyFn(list[i]) === itemKey) {\n        return i;\n      }\n    }\n    throw new Error('Failed to find drag index');\n  }\n\n  _getDragListIndex(): number {\n    const { list } = this.props;\n    const { lastDrag } = this.state;\n    if (!lastDrag) {\n      throw new Error('No drag happened');\n    }\n    const keyFn = this._getKeyFn();\n    return DraggableList._getIndexOfItemWithKey(keyFn, list, lastDrag.itemKey);\n  }\n\n  _getDragVisualIndex(): number {\n    const { list } = this.props;\n    const padding = this.props.padding!;\n    const { dragging, lastDrag } = this.state;\n    if (!dragging || !lastDrag) throw new Error('Should not happen');\n\n    const dragListIndex = this._getDragListIndex();\n\n    const { mouseY, startY } = lastDrag;\n\n    const movementFromNatural = mouseY - startY;\n    // 1 down, -1 up, 0 neither\n    const direction =\n      movementFromNatural > 0 ? 1 : movementFromNatural < 0 ? -1 : 0;\n    let newIndex = dragListIndex;\n    if (direction !== 0) {\n      const keyFn = this._getKeyFn();\n      let reach = Math.abs(movementFromNatural);\n      for (\n        let i = dragListIndex + direction;\n        i < list.length && i >= 0;\n        i += direction\n      ) {\n        const iDragHeight = this._getItemHeight(keyFn(list[i])).drag;\n        if (reach < iDragHeight / 2 + padding) break;\n        reach -= iDragHeight + padding;\n        newIndex = i;\n      }\n    }\n\n    return newIndex;\n  }\n\n  _getVisualListDuringDrag(): ReadonlyArray<I> {\n    const { list } = this.props;\n    const { dragging, lastDrag } = this.state;\n    if (!dragging || !lastDrag)\n      throw new Error(\n        'Should not happen: _getVisualListDuringDrag called outside of drag'\n      );\n\n    const dragListIndex = this._getDragListIndex();\n    const dragVisualIndex = this._getDragVisualIndex();\n\n    return update(list, {\n      $splice: [\n        [dragListIndex, 1],\n        [dragVisualIndex, 0, list[dragListIndex]],\n      ],\n    });\n  }\n\n  _getItemHeight(key: string): HeightData {\n    return this.state.heights != null && key in this.state.heights\n      ? this.state.heights[key]\n      : DEFAULT_HEIGHT;\n  }\n\n  // Get the distance between the tops of two items in the list.\n  // Does not consider how the dragged item may be rendered in a different position\n  // unless you pass in the re-ordered list as a parameter.\n  _getDistance(\n    start: number,\n    end: number,\n    dragging: boolean,\n    list: ReadonlyArray<I> = this.props.list\n  ): number {\n    if (end < start) {\n      return -this._getDistance(end, start, dragging, list);\n    }\n\n    const padding = this.props.padding!;\n    const keyFn = this._getKeyFn();\n    let distance = 0;\n    for (let i = start; i < end; i++) {\n      const height = this._getItemHeight(keyFn(list[i]));\n      distance += (dragging ? height.drag : height.natural) + padding;\n    }\n    return distance;\n  }\n\n  _getDistanceFromTopDuringDrag(\n    lastDrag: Drag,\n    itemKey: string,\n    visualList: ReadonlyArray<I>\n  ): number {\n    const keyFn = this._getKeyFn();\n    const index = DraggableList._getIndexOfItemWithKey(\n      keyFn,\n      visualList,\n      itemKey\n    );\n    const dragListIndex = this._getDragListIndex();\n    const dragVisualIndex = DraggableList._getIndexOfItemWithKey(\n      keyFn,\n      visualList,\n      lastDrag.itemKey\n    );\n\n    let offset = 0;\n    if (dragVisualIndex < dragListIndex) {\n      const dragItemHeight = this._getItemHeight(lastDrag.itemKey);\n      const newCenterHeight = this._getItemHeight(\n        keyFn(visualList[dragListIndex])\n      );\n      offset = dragItemHeight.drag - newCenterHeight.drag;\n    }\n\n    return (\n      lastDrag.startY +\n      offset +\n      this._getDistance(dragListIndex, index, true, visualList)\n    );\n  }\n\n  private _getContainer(): HTMLElement | null | undefined {\n    const { container } = this.props;\n    return container ? container() : null;\n  }\n\n  private static _getKeyFn<I>(\n    itemKey: string | ((item: I) => string)\n  ): (item: I) => string {\n    return typeof itemKey === 'function' ? itemKey : (x) => (x as any)[itemKey];\n  }\n\n  private _getKeyFn(): (item: I) => string {\n    return DraggableList._getKeyFn<I>(this.props.itemKey);\n  }\n\n  render() {\n    const padding = this.props.padding!;\n    const {\n      list,\n      springConfig,\n      container,\n      template,\n      unsetZIndex,\n      commonProps,\n    } = this.props;\n    const { dragging, lastDrag, useAbsolutePositioning } = this.state;\n\n    const keyFn = this._getKeyFn();\n    const anySelected = spring(dragging ? 1 : 0, springConfig);\n\n    const visualList = dragging ? this._getVisualListDuringDrag() : list;\n\n    const children = list.map((item, i) => {\n      const key = keyFn(item);\n      const selectedStyle =\n        dragging && lastDrag && lastDrag.itemKey === key\n          ? {\n              itemSelected: spring(1, springConfig),\n              y: lastDrag.mouseY,\n            }\n          : {\n              itemSelected: spring(0, springConfig),\n              y: (useAbsolutePositioning ? spring : (x: number) => x)(\n                dragging && lastDrag\n                  ? this._getDistanceFromTopDuringDrag(\n                      lastDrag,\n                      key,\n                      visualList\n                    )\n                  : this._getDistance(0, i, false),\n                springConfig\n              ),\n            };\n      const style = {\n        anySelected,\n        ...selectedStyle,\n      };\n      const makeDragHandleProps = (getY: () => number | undefined): object => ({\n        onMouseDown: (e: React.MouseEvent) =>\n          this._handleMouseDown(key, getY(), e),\n        onTouchStart: (e: React.TouchEvent) =>\n          this._handleTouchStart(key, getY(), e),\n      });\n      const height = this._getItemHeight(key);\n      return (\n        <Motion\n          style={style}\n          key={key}\n          children={({ itemSelected, anySelected, y }) => (\n            <MoveContainer\n              ref={this._itemRefs.ref(key)}\n              y={useAbsolutePositioning ? y : undefined}\n              template={template}\n              padding={padding}\n              item={item}\n              itemSelected={itemSelected}\n              anySelected={anySelected}\n              height={height}\n              zIndex={\n                unsetZIndex && !useAbsolutePositioning\n                  ? 'auto'\n                  : lastDrag && lastDrag.itemKey === key\n                  ? list.length\n                  : i\n              }\n              makeDragHandleProps={makeDragHandleProps}\n              commonProps={commonProps}\n            />\n          )}\n        />\n      );\n    });\n\n    let adjustScroll: number | OpaqueConfig = 0;\n    if (!dragging && lastDrag && useAbsolutePositioning) {\n      const dragListIndex = this._getDragListIndex();\n      adjustScroll = spring(\n        this._getDistance(0, dragListIndex, false) - lastDrag.mouseY,\n        springConfig\n      );\n    }\n\n    let heightReserverHeight = 0;\n    let heightReserverMarginBottom = 0;\n    if (list.length) {\n      heightReserverMarginBottom = padding;\n      if (useAbsolutePositioning) {\n        heightReserverHeight =\n          this._getDistance(0, list.length, false) - padding;\n      }\n    }\n    return (\n      <div style={{ position: 'relative' }} ref={this._listRef}>\n        <Motion\n          style={{ adjustScroll, anySelected }}\n          onRest={() => {\n            if (!dragging) {\n              this.setState({\n                heights: null,\n                useAbsolutePositioning: false,\n              });\n            }\n          }}\n          children={({ adjustScroll }) => (\n            <div\n              style={{\n                display: useAbsolutePositioning ? 'block' : 'none',\n                height: `${heightReserverHeight}px`,\n                marginBottom: `${heightReserverMarginBottom}px`,\n              }}\n            >\n              {container && (\n                <OnUpdate\n                  cb={() => {\n                    if (!dragging && lastDrag && useAbsolutePositioning) {\n                      this._adjustScrollAtEnd(adjustScroll);\n                    }\n                  }}\n                />\n              )}\n            </div>\n          )}\n        />\n        {children}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}